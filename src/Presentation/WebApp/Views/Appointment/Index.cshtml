@using WebApp.Helper;
@inject IHttpContextAccessor httpContextAccessor
@inject IUserSessionHelper userSession

@model List<Application.Features.Appointments.Dtos.AppointmentDto>

@{
    ViewData["Title"] = "Appointment List";
}

<div class="card mb-5 mb-xl-8">

    <input type="hidden" value="@userSession.Rol" id="userType" />
    <!--begin::Header-->
    <div class="card-header border-0 pt-5">
        <h3 class="card-title align-items-start flex-column">
            <span class="card-label fw-bold fs-3 mb-1">Appointments</span>
        </h3>
        <div class="card-toolbar" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-trigger="hover" title="Click to add a appointment">

            <a href="#" class="btn btn-sm btn-light btn-active-primary" data-bs-toggle="modal" data-bs-target="#appointmentModal">
                <i class="ki-outline ki-plus fs-2"></i>New Appointment
            </a>
        </div>
    </div>
    <!--end::Header-->
    <!--begin::Body-->
    <div class="card-body py-3">
        <!--begin::Table container-->
        <div class="table-responsive">
            <!--begin::Table-->
            <table class="table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4">
                <!--begin::Table head-->
                <thead>
                    <tr class="fw-bold text-muted">

                        <th class="min-w-200px">Appointment Date</th>
                        <th class="min-w-150px">Status</th>
                        @if (userSession.Rol == "Admin")
                        {<th class="min-w-150px">User Name</th> }
                        
                        <th class="min-w-150px">Service</th>
                        <th class="min-w-100px text-end">Actions</th>
                    </tr>
                </thead>
                <!--end::Table head-->
                <!--begin::Table body-->
                <tbody id="appointment_table_body">

                    @foreach (var item in Model)
                    {
                        <tr id="tr_@item.Id" data-appointment-id="@item.Id">
                            <td>
                                <div class="d-flex align-items-center">

                                    <div class="d-flex justify-content-start flex-column">
                                        <span class="text-gray-900 fw-bold text-hover-primary fs-6">@item.AppointmentDate</span>
                                    </div>
                                </div>
                            </td>
                            <td>
                               @if(item.Status.ToString() == "Approved")
                                {
                                    <span class="badge badge-light-primary">@item.Status</span>
                                }else if (item.Status.ToString() == "Completed")
                                {
                                    <span class="badge badge-light-success">@item.Status</span>

                                }else if (item.Status.ToString() == "Canceled")
                                {
                                    <span class="badge badge-light-danger">@item.Status</span>
                                }
                                else
                                {
                                     <span class="badge badge-light-warning">@item.Status</span>

                                }

                            </td>
                            @if (userSession.Rol == "Admin")
                            { 
                            <td>
                                <span class="text-gray-900 fw-bold text-hover-primary d-block fs-6">@item.User.FirstName @item.User.LastName</span>
                            </td>
                            }
                            <td>
                                <span class="text-gray-900 fw-bold text-hover-primary d-block fs-6">@item.Service.Name</span>
                            </td>
                            <td>
                                <div class="d-flex justify-content-end flex-shrink-0">
                                   
                                    @if (item.Status.ToString() == "Waiting")
                                    {
                                        <a href="#" class="btn btn-sm btn-primary align-self-center me-1 changeStatus" data-status="1">Confirm</a>
                                    }

                                     @if (item.Status.ToString() == "Approved")
                                    {
                                        <a href="#" class="btn btn-sm btn-success align-self-center me-1 changeStatus" data-status="3">Complete</a>
                                    }

                                    <a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1 editAppointmentBtn" >
                                        <i class="ki-outline ki-pencil fs-2"></i>
                                    </a>
                                    <a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm deleteBtn"  data-id="@item.Id">
                                        <i class="ki-outline ki-trash fs-2"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>

                    }


                </tbody>
                <!--end::Table body-->
            </table>
            <!--end::Table-->
        </div>
        <!--end::Table container-->
    </div>
    <!--begin::Body-->
</div>


<!-- Modal -->
<div class="modal fade" id="appointmentModal" tabindex="-1" aria-labelledby="appointmentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered mw-650px">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="fw-bold">Add Appointment</h2>
                <div class="btn btn-icon btn-sm btn-active-icon-primary" data-bs-dismiss="modal">
                    <i class="ki-outline ki-cross fs-1"></i>
                </div>
            </div>
            <div class="modal-body px-5 my-7">
                <form id="addAppointmentForm" class="form" action="#">
                    <div class="d-flex flex-column scroll-y px-5 px-lg-10" id="kt_modal_update_user_scroll" data-kt-scroll="true" data-kt-scroll-activate="true" data-kt-scroll-max-height="auto" data-kt-scroll-dependencies="#kt_modal_add_user_header" data-kt-scroll-wrappers="#kt_modal_add_user_scroll" data-kt-scroll-offset="300px">

                        <div class="mb-3">
                            <label for="appointmentDate" class="form-label">Appointment Date</label>
                            <input type="datetime-local" id="appointmentDate" name="appointmentDate" class="form-control" required>
                        </div>

@*
                        <div class="mb-3">
                            <label for="status" class="form-label">Status</label>
                            <select id="status" name="status" class="form-select" required>
                                <option value="1">Approved</option>
                                <option value="2">Canceled</option>
                                <option value="3">Completed</option>
                                <option value="4">Waiting</option>


                            </select>
                        </div>*@

                        @if(userSession.Rol == "Admin")
								{
                            <div class="mb-3">
                                <label for="userId" class="form-label">User</label>
                                <select id="userId" name="userId" class="form-select" required>
                                    <!-- Users will be populated here via AJAX -->
                                </select>
                            </div>
                        }else
                        {
                            <input type="hidden" name="userId" value="@userSession.GetUser().Id"/>
                        }
                        <div class="mb-3">
                            <label for="serviceId" class="form-label">Service </label>
                            <select id="serviceId" name="serviceId" class="form-select" required>
                                <!-- Services will be populated here via AJAX -->
                            </select>
                        </div>
                    </div>

                    <div class="text-center pt-10">
                        <button type="reset" class="btn btn-light me-3" data-bs-dismiss="modal">Discard</button>
                        <button type="submit" class="btn btn-primary">
                            <span class="indicator-label">Submit</span>
                            <span class="indicator-progress">
                                Please wait...
                                <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                            </span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Update Appointment Modal -->
<div class="modal fade" id="updateAppointmentModal" tabindex="-1" role="dialog" aria-labelledby="updateAppointmentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered mw-650px" role="document">
        <div class="modal-content">
            <div class="modal-header">
               

                 <h2 class="fw-bold">Update Appointment</h2>
                <div class="btn btn-icon btn-sm btn-active-icon-primary" data-bs-dismiss="modal">
                    <i class="ki-outline ki-cross fs-1"></i>
                </div>
            </div>
            <div class="modal-body">
                <form id="updateAppointmentForm">
                                        <div class="d-flex flex-column scroll-y px-5 px-lg-10" id="kt_modal_update_user_scroll" data-kt-scroll="true" data-kt-scroll-activate="true" data-kt-scroll-max-height="auto" data-kt-scroll-dependencies="#kt_modal_add_user_header" data-kt-scroll-wrappers="#kt_modal_add_user_scroll" data-kt-scroll-offset="300px">

                    <div class="mb-3">
                        <label for="appointmentDate" class="form-label">Appointment Date</label>
                        <input type="datetime-local" class="form-control" name="appointmentDate" required />
                    </div>

                     @if (userSession.Rol == "Admin")
                        { 
                        <div class="mb-3">
                            <label for="status" class="form-label">Status</label>
                            <select id="status_update" name="status" class="form-select" required>
                                <option value="1">Approved</option>
                                <option value="2">Canceled</option>
                                <option value="3">Completed</option>
                                <option value="4">Waiting</option>


                            </select>
                        </div>


                            <div class="mb-3">
                                <label for="userId" class="form-label">User</label>
                                <select id="userId_update" name="userId" class="form-select" required>
                                    <!-- Users will be populated here via AJAX -->
                                </select>
                            </div>
                        }
                        else
                        {
                            
                            <input  name="status" type="hidden"/>
                             <input  name="userId" type="hidden" value="@userSession.GetUser().Id"/>

                        }
                        <div class="mb-3">
                            <label for="serviceId" class="form-label">Service</label>
                            <select id="serviceId_update" name="serviceId" class="form-select" required>
                                <!-- Services will be populated here via AJAX -->
                            </select>
                        </div>
                                            <input type="hidden" name="id" /> <!-- Hidden field to store the appointment ID -->

                        </div>
                     <div class="text-center pt-10">
                        <button type="reset" class="btn btn-light me-3" data-bs-dismiss="modal">Discard</button>
                        <button type="submit" class="btn btn-primary">
                            <span class="indicator-label">Update Appointment</span>
                            <span class="indicator-progress">
                                Please wait...
                                <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                            </span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



@section Scripts{


    <script>


        var userType = $("#userType").val();

        $(document).ready(function () {

            $(".deleteBtn").click(function () {
            var id = $(this).data('id'); // Get user ID


            Swal.fire({
                text: "Are you sure you want to delete?",
                icon: "warning",
                showCancelButton: true,
                buttonsStyling: false,
                confirmButtonText: "Yes, delete!",
                cancelButtonText: "No, cancel",
                customClass: {
                    confirmButton: "btn fw-bold btn-danger",
                    cancelButton: "btn fw-bold btn-active-light-primary"
                }
            }).then(function (result) {
                if (result.isConfirmed) { // Check if the user clicked 'Yes'
                    $.ajax({
                        type: 'POST',
                        url: '/Appointment/DeleteAppointment?id=' + id, // Ensure this URL is correct
                        success: function (data) {
                            if (data.success) { // Check if deletion is successful
                                toastr["success"]("Appointment deleted successfully");
                                // Remove the user row from the table
                                $("#tr_" + id).fadeOut(400, function () { $(this).remove(); });
                            } else {
                                toastr["error"]('An error occurred during the operation.');
                            }
                        },
                        error: function () {
                            toastr["error"]("'Error! An error occurred while communicating with the server. ");

                        }
                    });
                }
            });
        });












            // Trigger AJAX request to fetch users and services when the modal is shown
            $('#appointmentModal').on('show.bs.modal', function () {
                // Make an AJAX call to get users and services
                $.ajax({
                    type: "GET",
                    url: "/Appointment/GetUsersAndServices", // Adjust this URL to your actual controller action
                    success: function (response) {
                        // Fill the user select dropdown
                        if (response.users && response.users.length > 0) {
                            var userOptions = '<option value="">Select a User</option>';
                            $.each(response.users, function (index, user) {
                                userOptions += `<option value="${user.id}">${user.firstName} ${user.lastName}</option>`;
                            });
                            $('#userId').html(userOptions); // Populate userId select
                        }

                        // Fill the service select dropdown
                        if (response.services && response.services.length > 0) {
                            var serviceOptions = '<option value="">Select a Service</option>';
                            $.each(response.services, function (index, service) {
                                serviceOptions += `<option value="${service.id}">${service.name}</option>`;
                            });
                            $('#serviceId').html(serviceOptions); // Populate serviceId select
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching data: ", error);
                    }
                });
            });

            // Handle form submission (add appointment)
            $('#addAppointmentForm').on('submit', function (e) {
                e.preventDefault();


                //var appointmentData = {
                //    appointmentDate: $('#appointmentDate').val(),
                //    userId: $('#userId').val(),
                //    serviceId: $('#serviceId').val()
                //};
                var formData = $(this).serialize();


                $.ajax({
                    type: "POST",
                    url: "/Appointment/AddAppointment",  // Adjust to the correct URL
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            toastr["success"]('Appointment added successfully!');
                            // Optionally, refresh the appointments table or update UI

                             // Yeni kullanıcıyı tabloya ekle
                            var newAppointment = response.data; // Backend'den gelen yeni kullanıcı bilgisi

                            // Kullanıcıyı tabloya ekle
                            var appointmentRow = `<tr id="tr_${newAppointment.id}" data-appointment-id="${newAppointment.id}">
                                    <td>
                                        <div class="d-flex align-items-center">

                                            <div class="d-flex justify-content-start flex-column">
                                                        <span class="text-gray-900 fw-bold text-hover-primary fs-6">${newAppointment.appointmentDate}</span>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                                <span class="text-gray-900 fw-bold text-hover-primary d-block fs-6">${newAppointment.status}</span>
                                    </td>

                                        ${
        userType === "Admin"
        ? `<td>
                <span class="text-gray-900 fw-bold text-hover-primary d-block fs-6">
                    ${newAppointment.user?.firstName} ${newAppointment.user?.lastName}
                </span>
           </td>`
        : ""
    }

                                    
                                    <td>
                                                <span class="text-gray-900 fw-bold text-hover-primary d-block fs-6">${newAppointment.service?.name}</span>
                                    </td>
                                    <td>
                                        <div class="d-flex justify-content-end flex-shrink-0">
                                          
                                            <a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1 editAppointmentBtn">
                                                <i class="ki-outline ki-pencil fs-2"></i>
                                            </a>
                                                    <a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm" id="deleteBtn" data-id="${newAppointment.id}">
                                                <i class="ki-outline ki-trash fs-2"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                                                    `;


                            // Tabloya yeni satırı ekle
                            $("#appointment_table_body").append(appointmentRow);

                            // Modal kapanmadan önce işlemi sonlandırma
                            // Modal'ı kapat
                            $('#appointmentModal').modal('hide'); // Close the modal



                            // Başarı mesajı
                            toastr["success"]("Appointment added successfully!");

                            // Formu temizle
                            $("#addAppointmentForm")[0].reset();


                        } else {
                            toastr["error"]("There was an issue adding the appointment.");

                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Error:', error);
                        toastr["error"]('Error occurred while adding appointment');
                    }
                });
            });
        });


   

        $(document).ready(function () {


    // Handle edit button click to populate modal with current data
    $('.editAppointmentBtn').on('click', function () {
        var row = $(this).closest('tr');
                var appointmentId = row.data('appointment-id');

                                                     populateUserAndServiceDropdowns();

        // Fetch the current appointment data
        $.ajax({
             type: 'POST',
              url: '/Appointment/GetAppointment?id=' + appointmentId, 
            success: function (response) {
                if (response.success) {

                    
                    // Optionally, you can populate users and services dropdown here if needed

                    // Populate modal form fields with the current data
                    $('#updateAppointmentForm input[name="id"]').val(response.data.id);  // id
                    $('#updateAppointmentForm input[name="appointmentDate"]').val(response.data.appointmentDate); 
                    $('#updateAppointmentForm select[id="serviceId_update"]').val(response.data.serviceId);  // id

                    if(userType === "Admin") {
                           $('#updateAppointmentForm select[id="userId_update"]').val(response.data.userId).trigger('change'); 
                    $('#updateAppointmentForm select[name="status_update"]').val(response.data.status).trigger('change'); 
                    }else {
                          $('#updateAppointmentForm input[id="userId"]').val(response.data.userId); 
                         $('#updateAppointmentForm input[id="status"]').val(response.data.status); 
                    }
                 


                    
                    // Show the modal
                    $('#updateAppointmentModal').modal('show');
                } else {
                    toastr["error"]('Error loading appointment data');
                }
            },
            error: function () {
                toastr["error"]('Error fetching appointment data');
            }
        });
    });

    // Handle form submission to update appointment
    $('#updateAppointmentForm').on('submit', function (e) {
        e.preventDefault();
 var formData = $(this).serialize();

        // Send update request via AJAX
        $.ajax({
            type: "POST",
            url: "/Appointment/UpdateAppointment",  // Adjust to the correct URL
            data: formData, // Send data as JSON string
            success: function (response) {
                if (response.success) {
                    toastr["success"]('Appointment updated successfully!');
                    $('#updateAppointmentModal').modal('hide');  // Close the modal
                    location.reload();  // Reload the page or refresh the table of appointments
                } else {
                    toastr["error"]('There was an issue updating the appointment.');
                }
            },
            error: function () {
                toastr["error"]('Error occurred while updating the appointment');
            }
        });
    });
        });


// Function to populate user and service dropdowns (if needed)
function populateUserAndServiceDropdowns() {
    $.ajax({
        type: "GET",
        url: "/Appointment/GetUsersAndServices", 
        success: function (response) {
           if (response.users && response.users.length > 0) {
                            var userOptions = '<option value="">Select a User</option>';
                            $.each(response.users, function (index, user) {
                                userOptions += `<option value="${user.id}">${user.firstName} ${user.lastName}</option>`;
                            });
                            $('#userId_update').html(userOptions); // Populate userId select
                        }

                        // Fill the service select dropdown
                        if (response.services && response.services.length > 0) {
                            var serviceOptions = '<option value="">Select a Service</option>';
                            $.each(response.services, function (index, service) {
                                serviceOptions += `<option value="${service.id}">${service.name}</option>`;
                            });
                            $('#serviceId_update').html(serviceOptions); // Populate serviceId select
                        }


        },
        error: function () {
            alert('Error fetching users and services');
        }
    });
}


  $(".changeStatus").click(function () {
      var row = $(this).closest('tr');
                var appointmentId = row.data('appointment-id');

            var status = $(this).data('status'); 

              var appointmentData = {
                    Id: appointmentId,
                    Status:status,
                };

                console.log(appointmentData)

            Swal.fire({
                text: "Are you sure you want to change your appointment status??",
                icon: "warning",
                showCancelButton: true,
                buttonsStyling: false,
                confirmButtonText: "Yes, change!",
                cancelButtonText: "No, cancel",
                customClass: {
                    confirmButton: "btn fw-bold btn-danger",
                    cancelButton: "btn fw-bold btn-active-light-primary"
                }
            }).then(function (result) {
                if (result.isConfirmed) { 
                    $.ajax({
                        type: 'POST',
                        url: '/Appointment/ChangeStatus',
                       data: appointmentData,  // Ensure data is serialized properly
                        success: function (data) {
                            if (data.success) { // Check if deletion is successful
                                toastr["success"]("Appointment status changed successfully");
                                // Remove the user row from the table
                            } else {
                                toastr["error"]('An error occurred during the operation.');
                            }
                        },
                        error: function () {
                            toastr["error"]("'Error! An error occurred while communicating with the server. ");

                        }
                    });
                }
            });
            });

    </script>
}